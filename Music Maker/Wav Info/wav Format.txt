NeedU.wav
http://soundfile.sapp.org/doc/WaveFormat/
The canonical WAVE format starts with the RIFF header:

0         4   ChunkID          Contains the letters "RIFF" in ASCII form
                               (0x52494646 big-endian form).



4         4   ChunkSize        36 + SubChunk2Size, or more precisely:
                               4 + (8 + SubChunk1Size) + (8 + SubChunk2Size)
                               This is the size of the rest of the chunk 
                               following this number.  This is the size of the 
                               entire file in bytes minus 8 bytes for the
                               two fields not included in this count:
                               ChunkID and ChunkSize.
46 D2 45 00
	4575814


8         4   Format           Contains the letters "WAVE"
                               (0x57415645 big-endian form).
The "WAVE" format consists of two subchunks: "fmt " and "data":








The "fmt " subchunk describes the sound data's format:

12        4   Subchunk1ID      Contains the letters "fmt "
                               (0x666d7420 big-endian form).



16        4   Subchunk1Size    16 for PCM.  This is the size of the
                               rest of the Subchunk which follows this number.
10 00 00 00
	16
	PCM



20        2   AudioFormat      PCM = 1 (i.e. Linear quantization)
                               Values other than 1 indicate some 
                               form of compression.
01 00
	Linear


22        2   NumChannels      Mono = 1, Stereo = 2, etc.
	02 00
	Stereo



24        4   SampleRate       8000, 44100, etc.
44 AC 00 00
	44100



28        4   ByteRate         == SampleRate * NumChannels * BitsPerSample/8
10 B1 02 00
	176400
	(44100*2*16)/8


32        2   BlockAlign       == NumChannels * BitsPerSample/8
                               The number of bytes for one sample including
                               all channels. I wonder what happens when
                               this number isn't an integer?
	04 00
	4
	(2*16)/8



34        2   BitsPerSample    8 bits = 8, 16 bits = 16, etc.
	10 00
	16



          2   ExtraParamSize   if PCM, then doesn't exist
          X   ExtraParams      space for extra parameters
10 00







The "data" subchunk contains the size of the data and the actual sound:

36        4   Subchunk2ID      Contains the letters "data"
                               (0x64617461 big-endian form).



40        4   Subchunk2Size    == NumSamples * NumChannels * BitsPerSample/8
                               This is the number of bytes in the data.
                               You can also think of this as the size
                               of the read of the subchunk following this 
                               number.
	00 D2 45 00
	4575744
	(X*2*16)/8
	1,143,936 samples



44        *   Data             The actual sound data.